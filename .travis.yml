language: r
sudo: false
#cache: packages
  
r_check_args: "--no-vignettes"
r_build_args: '--no-build-vignettes'

#repos:
#  CRAN: https://cloud.r-project.org
#  ropensci: http://packages.ropensci.org
  
env:
global:
  - R_MAX_NUM_DLLS=999
  #- _R_CHECK_FORCE_SUGGESTS_=true
  - _R_CHECK_CRAN_INCOMING_=true
  - MAKEFLAGS="-j 2"

matrix:
  include:
    - os: linux
      dist: trusty
      r: release
      r_binary_packages:
        - rstantools
        - data.table
        - jsonlite
        - Rcpp
        - cOde
        - remotes
        - Deriv
        - mvtnorm
        - knitr
        - testthat
        - devtools
        - DEoptim
        - GGally
        - shiny
        - mize
        - StanHeaders
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      dist: trusty
      r: devel
      r_binary_packages:
        - remotes
        - rstantools
        - data.table
        - jsonlite
        - Rcpp
        - cOde
        - Deriv
        - mvtnorm
        - knitr
        - testthat
        - devtools
        - DEoptim
        - GGally
        - shiny
        - mize
        - StanHeaders
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        
 #   - os: linux
  #    dist: trusty
 #     r: release
 #     addons:
 #       apt:
  #        sources:
   #         - ubuntu-toolchain-r-test
  #          - sourceline: 'deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-7 main'
  #            key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
  #        packages:
 #           - clang-7
   #   env:
  #      - MATRIX_EVAL="CC=clang-7 CXX=clang++-7"
    - os: osx
      osx_image: xcode10
      r: release
      r_binary_packages:
        - rstantools
        - data.table
        - jsonlite
        - Rcpp
        - OpenMx
        - cOde
        - remotes
        - Deriv
        - mvtnorm
        - knitr
        - testthat
        - devtools
        - DEoptim
        - GGally
        - shiny
        - mize
        - StanHeaders
      fortran: false

     
before_install:
  - mkdir -p ~/.R/
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo "CXX14 += g++-7 -fPIC -std=c++1y" >> ~/.R/Makevars; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then echo "CXX14FLAGS = -mtune=native -march=native -Wno-unused-variable -Wno-unused-function -Wno-unused-local-typedefs -Wno-ignored-attributes -Wno-deprecated-declarations -Wno-attributes -O3" >> ~/.R/Makevars; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "CXX14 = clang++ -arch x86_64 -ftemplate-depth-256" >> ~/.R/Makevars; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "CXX14FLAGS = -O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function  -Wno-unknown-pragmas" >> ~/.R/Makevars; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo "CC = clang" >> ~/.R/Makevars; fi
  #- R -e 'install.packages("remotes");library(remotes);remotes::install_deps(dependencies = TRUE,upgrade="always")'
  - eval "${MATRIX_EVAL}"
  
install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -yq --allow-unauthenticated --no-install-suggests --no-install-recommends r-cran-openmx; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -yq --allow-unauthenticated --no-install-suggests --no-install-recommends r-cran-rstan; fi

script:
  - travis_wait 30 R CMD build --no-build-vignettes .
  - travis_wait 30 R CMD check --no-build-vignettes --as-cran  *tar.gz
